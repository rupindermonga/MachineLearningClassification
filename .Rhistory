setwd("D:/Learning/Machine Learning/Classification")
db = read.csv("LoanKuber Case Data.csv")
head(db)
summary(db)
sum(is.na(dn))
sum(is.na(db))
is.na(db)
names(db)
write.summary("summary.csv",summary(db))
write.csv("summary.csv",summary(db))
write.csv(summary(db),"summary.csv")
write.csv(is.na(db),"NA.csv")
db1 = db[,-c(21,22,23,2,3)]
names(db1)
install.packages(car)
install.packages("car")
library(car)
db1.vif = ln(No..of.bounces~. - Customer.Name, data = db1)
db1.vif = ln(No..of.bounces~. - Customer.Name, data = db1)
db1.vif = lm(No..of.bounces~. - Customer.Name, data = db1)
vif(db1.vif)
corr(db1)
correl(db1)
cor(db1)
cor(db1,db1)
write.csv(db1,"db1.csv")
names(db1)
#only numerical
db2 = db1[,-c(1,3,4,25)]
cor(db2,db2)
write.csv(cor(db2,db2),"cor.csv")
db1.vif = lm(No..of.bounces~. - Customer.Name - Monthly.Household.Income.Score, data = db1)
vif(db1.vif)
db1.vif = lm(No..of.bounces~. - Customer.Name - Monthly.Household.Income.Score - Average.Monthly.Credit.Score, data = db1)
vif(db1.vif)
db1.vif = lm(No..of.bounces~. - Customer.Name - Monthly.Household.Income.Score - Total.Banking.Score.out.of.9., data = db1)
vif(db1.vif)
db1.vif = lm(No..of.bounces~. - Customer.Name - Monthly.Household.Income.Score - Total.Banking.Score.out.of.9.- Total.Demographic.Score.out.of.6.
, data = db1)
vif(db1.vif)
db1.vif = lm(No..of.bounces~. - Customer.Name - Monthly.Household.Income.Score - Total.Banking.Score.out.of.9.- Total.Demographic.Score.out.of.6.
- Total.Property.Score.out.of.36.
, data = db1)
vif(db1.vif)
names(db2)
db3 = db2[,-c(13,5,6,2)]
write.csv(cor(db3,db3),"cordb3.csv")
names(db1)
db4 = db1[,-c(16,8,9,5)]
db4.vif = lm(No..of.bounces~. - Customer.Name, data = db4)
vif(db4.vif)
db4.vif = lm(No..of.bounces~. - Customer.Name-Salaried.Self.Employed, data = db4)
vif(db4.vif)
write.csv(db4,"db4.csv")
db4.vif = lm(No..of.bounces~. - Customer.Name-Salaried.Self.Employed-Profession, data = db4)
vif(db4.vif)
names(db4)
db5=[,-4]
db5.vif = lm(No..of.bounces~. - Customer.Name-Salaried.Self.Employed-Profession, data = db5)
db5=db4[,-4]
db5.vif = lm(No..of.bounces~. - Customer.Name-Salaried.Self.Employed-Profession, data = db5)
db5.vif = lm(No..of.bounces~. - Customer.Name-Salaried.Self.Employed, data = db5)
vif(db4.vif)
db5.vif = lm(No..of.bounces~., data = db5)
vif(db4.vif)
#Logistic regression
model  = glm(No..of.bounces~. - Customer.Name, family= binomial(logit), data = db5)
summary(model)
step(model)
model1 = glm(formula = No..of.bounces ~ Sanctioned.Loan.Amount..in.Laksh.INR. +
Total.Income.Score.out.of.24. + Total.CIBIL.Score.out.of.18. +
Property.Chain.Score + Last.Registered.Book.1.Document.Score +
Locality.Development.Score + ABB.EMI.Score + No..of.presentations.till.Feb..19.,
family = binomial(logit), data = db5)
summary(model1)
model2 = glm(formula = No..of.bounces ~ Sanctioned.Loan.Amount..in.Laksh.INR. +
Total.Income.Score.out.of.24. + Total.CIBIL.Score.out.of.18. +
Property.Chain.Score + Last.Registered.Book.1.Document.Score + ABB.EMI.Score + No..of.presentations.till.Feb..19.,
family = binomial(logit), data = db5)
summary(model2)
model3 = glm(formula = No..of.bounces ~ Sanctioned.Loan.Amount..in.Laksh.INR. +
Total.Income.Score.out.of.24. + Total.CIBIL.Score.out.of.18. +
Last.Registered.Book.1.Document.Score + ABB.EMI.Score + No..of.presentations.till.Feb..19.,
family = binomial(logit), data = db5)
summary(model3)
summary(model4)
model4 = glm(formula = No..of.bounces ~
Total.Income.Score.out.of.24. + Total.CIBIL.Score.out.of.18. +
Last.Registered.Book.1.Document.Score + ABB.EMI.Score + No..of.presentations.till.Feb..19.,
family = binomial(logit), data = db5)
summary(model4)
model5 = glm(formula = No..of.bounces ~
Total.CIBIL.Score.out.of.18. +
Last.Registered.Book.1.Document.Score + ABB.EMI.Score + No..of.presentations.till.Feb..19.,
family = binomial(logit), data = db5)
summary(model5)
predict = predict(model5)
predict
predict = predict(model5,type = 'response')
predict
table(db5$No..of.bounces, predict > 0.5)
summary(model5)
model5 = glm(formula = No..of.bounces ~
Last.Registered.Book.1.Document.Score + ABB.EMI.Score + No..of.presentations.till.Feb..19.,
family = binomial(logit), data = db5)
model5 = glm(formula = No..of.bounces ~
Total.CIBIL.Score.out.of.18. +
Last.Registered.Book.1.Document.Score + ABB.EMI.Score + No..of.presentations.till.Feb..19.,
family = binomial(logit), data = db5)
summary(model5)
model6 = glm(formula = No..of.bounces ~
Last.Registered.Book.1.Document.Score + ABB.EMI.Score + No..of.presentations.till.Feb..19.,
family = binomial(logit), data = db5)
summary(model6)
predict6 = predict(model6,type = 'response')
table(db5$No..of.bounces, predict6 > 0.5)
model7 = glm(formula = No..of.bounces ~
ABB.EMI.Score + No..of.presentations.till.Feb..19.,
family = binomial(logit), data = db5)
summary(model7)
predict7 = predict(model7,type = 'response')
table(db5$No..of.bounces, predict7 > 0.5)
table(db5$No..of.bounces, predict6 > 0.5)
model1 = glm(formula = No..of.bounces ~ Sanctioned.Loan.Amount..in.Laksh.INR. +
Total.Income.Score.out.of.24. + Total.CIBIL.Score.out.of.18. +
Property.Chain.Score + Last.Registered.Book.1.Document.Score +
Locality.Development.Score + ABB.EMI.Score + No..of.presentations.till.Feb..19.,
family = binomial(logit), data = db5)
summary(model1)
predict1 = predict(model1,type = 'response')
table(db5$No..of.bounces, predict1 > 0.5)
model  = glm(No..of.bounces~. - Customer.Name, family= binomial(logit), data = db5)
summary(model)
predict = predict(model,type = 'response')
table(db5$No..of.bounces, predict > 0.5)
head(db5)
install.packages("randomforest")
library(randomforest)
library("randomforest")
install.packages("randomForest")
library(randomForest)
modelrf = randomForest(No..of.bounces~. - Customer.Name,  data = db5)
y
Yes
summar(modelrf)
summary(modelrf)
print(modelrf)
modelrf$pred
table(db5$No..of.bounces, modelrf$pred > 0.5)
modelrf = randomForest(No..of.bounces~. - Customer.Name,  data = db5)
summary(modelrf)
modelrf$pred
table(db5$No..of.bounces, modelrf$pred > 0.5)
#Train and Test
set.seed(101)
sample = sample.split(db5, SplitRatio = .7)
#Train and Test
require(caTools)
#Train and Test
install.packages("caTools")
library("caTools")
set.seed(101)
sample = sample.split(db5, SplitRatio = .7)
train = subset(db5, sample == TRUE)
test  = subset(db5, sample == FALSE)
#Logistic regression
model  = glm(No..of.bounces~. - Customer.Name, family= binomial(logit), data = train)
summary(model)
step(model)
model1 = glm(formula = No..of.bounces ~ Salaried.Self.Employed + Total.Income.Score.out.of.24. +
Total.CIBIL.Score.out.of.18. + Property.Chain.Score + Last.Registered.Book.1.Document.Score +
Technical.Deviation.Score + Locality.Development.Score +
Stability.Score + ABB.EMI.Score + No..of.presentations.till.Feb..19.,
family = binomial(logit), data = train)
summary(model1)
predict1 = predict(model1,type = 'response')
table(test$No..of.bounces, predict > 0.5)
table(train$No..of.bounces, predict > 0.5)
predict1 = predict(model1,type = 'response')
table(train$No..of.bounces, predict > 0.5)
#Logistic regression
model  = glm(No..of.bounces~. - Customer.Name, family= binomial(logit), data = train)
step(model)
model1 = glm(formula = No..of.bounces ~ Salaried.Self.Employed + Total.Income.Score.out.of.24. +
Total.CIBIL.Score.out.of.18. + Property.Chain.Score + Last.Registered.Book.1.Document.Score +
Technical.Deviation.Score + Locality.Development.Score +
Stability.Score + ABB.EMI.Score + No..of.presentations.till.Feb..19.,
family = binomial(logit), data = train)
summary(model1)
predict1 = predict(model1,type = 'response')
table(train$No..of.bounces, predict > 0.5)
